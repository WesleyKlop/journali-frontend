name: deploy-frontend

on:
    push:
        branches:
            - master
    release:
        types: [created]

jobs:
    deliver:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
            -   name: Publish frontend
                uses: elgohr/Publish-Docker-Github-Action@master
                with:
                    name: wesleyklop/journali-frontend/journali-frontend
                    username: ${{ github.actor }}
                    password: ${{ github.token }}
                    registry: docker.pkg.github.com
                    dockerfile: Dockerfile
    deploy-staging:
        name: deploy staging
        if: ${{ github.event_name == 'push' }}
        runs-on: self-hosted
        needs: [deliver]
        steps:
            -   name: start deployment
                uses: bobheadxi/deployments@master
                id: deployment
                with:
                    step: start
                    token: ${{ github.token }}
                    env: staging
            -   name: run deployment
                run: docker service update --with-registry-auth journali-staging_web
            -   name: rollback on failure
                if: failure()
                run: docker service rollback journali-staging_web
            -   name: update deployment status
                uses: bobheadxi/deployments@master
                if: always()
                with:
                    step: finish
                    token: ${{ github.token }}
                    status: ${{ job.status }}
                    env_url: http://staging.journali.nl
                    deployment_id: ${{ steps.deployment.outputs.deployment_id }}
    deploy-production:
        name: deploy production
        if: ${{ github.event_name == 'release' }}
        runs-on: self-hosted
        needs: [deliver]
        steps:
            -   name: start deployment
                uses: bobheadxi/deployments@master
                id: deployment
                with:
                    step: start
                    token: ${{ github.token }}
                    env: production
            -   name: run deployment
                run: docker service update --with-registry-auth journali-production_web
            -   name: rollback on failure
                if: failure()
                run: docker service rollback journali-production_web
            -   name: update deployment status
                uses: bobheadxi/deployments@master
                if: always()
                with:
                    step: finish
                    token: ${{ github.token }}
                    status: ${{ job.status }}
                    env_url: http://journali.nl
                    deployment_id: ${{ steps.deployment.outputs.deployment_id }}
