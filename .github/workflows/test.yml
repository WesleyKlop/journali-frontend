name: test frontend

on:
    push:
        branches:
            - master
    pull_request:

jobs:
    analyse:
        name: analyse
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: '13.x'
            - id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - uses: actions/cache@v1
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-
            - run: yarn --frozen-lockfile
            - run: yarn lint:check

    sonarqube:
        name: sonarqube
        runs-on: self-hosted
        steps:
            - uses: actions/checkout@v2
            - run: sudo apt-get install unzip npm -y
            - uses: mathrix-education/sonar-scanner@master
              with:
                  version: 4.2.0.1873 # required
                  typescript: false
                  with-jre: true
                  scan: true
                  args: --debug -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}

    build:
        name: build
        needs: [analyse, sonarqube]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: '13.x'
            - id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - uses: actions/cache@v1
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-
            - run: yarn --frozen-lockfile
            - run: yarn build:prod
